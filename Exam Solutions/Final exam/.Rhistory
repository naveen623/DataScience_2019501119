apple <- c('red', 'green','yellow')
print(apple)
print(class(apple))
list1 <- list(c(2,5,3),21.3,sin)
print(list1)
a <- array(c('green','yellow'),dim = c(3,3,2))
print(a)
a <- array(c('green','yellow'),dim = c(3,3,2))
a <- array(c('green','yellow'),dim = c(3,3,3))
print(a)
BMI <- data.frame(
gender = c("Male", "Male", "Female"),
height = c(150, 120, 170),
weight = c(102, 70.2, 25),
Age = c(22, 23, 24)
)
print(BMI)
new.function <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
q()
setwd("E:\\DataScience_2019501119\\Exam Solutions\\Final exam")
d = read.csv("Data.csv", header = TRUE);
View(d)
data$TID <- NULL
library(arules)
write.csv(d, "Frequent-Itemsets.csv", quote = FALSE, row.names = TRUE)
transactions = read.transactions("Frequent-Itemsets.csv", sep=',', rm.duplicates = TRUE)
inspect(transactions)
frequent_itemsets <- apriori(transactions, parameter = list(sup = 0.03, conf = 0.5,target="frequent itemsets"))
inspect(sort(frequent_itemsets)[1:15])
itemFrequencyPlot(transactions, topN = 5, col = "Red")
setwd("E:\\DataScience_2019501119\\Exam Solutions\\Final exam")
lenses_data = read.csv("lenses.data.csv", header = FALSE, col.names = c("index", "age", "spectacle_prescription", "astigmatic", "tear_production_rate", "Class"))
lenses_data$index <- NULL
library(rpart)
y<-as.factor(lenses_data[,5])
x<-lenses_data[,1:4]
model1<-rpart(y~.,x, parms = list(split = 'information'),
control=rpart.control(minsplit=0,minbucket=0,cp=-1, maxcompete=0, maxsurrogate=0, usesurrogate=0, xval=0,maxdepth=5))
library(rpart.plot)
rpart.plot(model1)
setwd("E:\\DataScience_2019501119\\Exam Solutions\\Final exam")
lenses_data = read.csv("lenses.data.csv", header = FALSE, col.names = c("index", "age", "spectacle_prescription", "astigmatic", "tear_production_rate", "Class"))
lenses_data$index <- NULL
library(rpart)
y<-as.factor(lenses_data[,5])
x<-lenses_data[,1:4]
model1<-rpart(y~.,x, parms = list(split = 'information'),
control=rpart.control(minsplit=0,minbucket=0,cp=-1, maxcompete=0, maxsurrogate=0, usesurrogate=0, xval=0,maxdepth=5))
library(rpart.plot)
rpart.plot(model1)
setwd("E:\\DataScience_2019501119\\Exam Solutions\\Final exam")
d = read.csv("Liver_Data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks", "selector"))
#below is the converting the decision attribute into classes
d$drinks = cut(d$drinks, breaks = c(0,5,10,15,20,25), labels = c('C1', 'C2', 'C3', 'C4', 'C4'), right = FALSE)
d = na.omit(d)
#training and of  test sets
traindata = subset(d, d$selector == 1)
testdata = subset(d, d$selector == 2)
x_train <- subset(traindata, select = -c(selector, drinks))
x_test <- subset(testdata, select = -c(selector, drinks))
y_train = traindata[,6, drop = TRUE]
y_test = testdata[,6, drop = TRUE]
#For Training Data
#knn if k=1
library(class)
model1 = knn(x_train, x_test, y_train, k = 1)
1-sum(y_train==model1)/length(y_train)
#knn if k=2
model2 = knn(x_train, x_train, y_train, k = 2)
1-sum(y_train==model2)/length(y_train)
#knn if k=3
model3 = knn(x_train, x_train, y_train, k = 3)
1-sum(y_train==model3)/length(y_train)
#For Test Data
#knn if k=1
model4 = knn(x_train, x_test, y_train, k = 1)
1-sum(y_test==model4)/length(y_test)
#knn if k=2
model5 = knn(x_train, x_test, y_train, k = 2)
1-sum(y_test==model5)/length(y_test)
#knn if k=3
model6 = knn(x_train, x_test, y_train, k = 3)
1-sum(y_test==model6)/length(y_test)
